name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        node-version: [12.x]
        redis: [5.x]
    name: CI - redis ${{ matrix.redis }}, node ${{ matrix.node-version }}
    steps:
    - name: setup redis
      uses: shogo82148/actions-setup-redis@v1
      with:
        redis-version: ${{ matrix.redis }}
    - name: ping redis
      run: redis-cli ping
    - uses: actions/checkout@v1
    - name: set node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: yarn install
      run: yarn install
    - name: yarn test
      run: yarn test

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.repository == 'openupm/openupm'
    steps:
    - uses: actions/checkout@v1
    - name: release
      uses: cycjimmy/semantic-release-action@v2
      with:
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
        branch: master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-upm-api:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.repository == 'openupm/openupm'
    strategy:
      matrix:
        target_host: [HOST_UPM_API, HOST_CN]
    steps:
    - name: deploy
      uses: maddox/actions/ssh@master
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        HOST: ${{ secrets[matrix.target_host] }}
        USER: ${{ secrets.USER }}
      with:
        args: |
            cd /home/openupm/openupm
            git checkout -- yarn.lock
            [ -f /usr/bin/pgit ] && GIT_BIN=pgit || GIT_BIN=git
            echo "GIT_BIN: $GIT_BIN"
            $GIT_BIN pull -q
            yarn
            git log -m --name-only -1 --pretty="format:" --first-parent master | grep -sqE '^app|^config|^server' && pm2 reload pm2-api.yml || echo skip pm2 api reload

  deploy-upm-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.repository == 'openupm/openupm'
    steps:
    - name: deploy
      uses: maddox/actions/ssh@master
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        HOST: ${{ secrets.HOST_UPM_BUILD }}
        USER: ${{ secrets.USER }}
      with:
        args: |
            cd /home/openupm/openupm
            git checkout -- yarn.lock
            git pull -q
            yarn
            git log -m --name-only -1 --pretty="format:" --first-parent master | grep -sqE '^app|^config' && pm2 reload queue-main || echo skip pm2 queue-main reload
            git log -m --name-only -1 --pretty="format:" --first-parent master | grep -sqE '^app|^config|^data' && pm2 reload add-build-package-job || echo skip pm2 add-build-package-job reload
            git log -m --name-only -1 --pretty="format:" --first-parent master | grep -sqE '^data' && pm2 reload fetch-package-extra || echo skip pm2 fetch-package-extra reload

  build-website-us:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.repository == 'openupm/openupm'
    steps:
    - uses: actions/checkout@v1
    - name: yarn install
      run: yarn install
    - name: yarn docs:build
      run: |
        # Set region to us
        export OPENUPM_REGION=us
        # Remove CN region content
        rm -rf docs/zh
        # Build
        source env.sh
        yarn docs:build
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - name: Publish to Netlify
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=./docs/.vuepress/dist/ --prod
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  build-website-cn:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.repository == 'openupm/openupm'
    steps:
    - uses: actions/checkout@v1
    - name: yarn install
      run: yarn install
    - name: yarn docs:build
      run: |
        # Set region to cn
        export OPENUPM_REGION=cn
        # Overwrite homepage page
        cp docs/zh/index.md docs/index.md
        # Build
        source env.sh
        yarn docs:build
    - name: deploy to openupm-website-cn repo
      uses: JamesIves/github-pages-deploy-action@3.6.2
      with:
        REPOSITORY_NAME: openupm/openupm-website-cn
        BRANCH: gh-pages
        FOLDER: docs/.vuepress/dist
        CLEAN: true
        SINGLE_COMMIT: true
        ACCESS_TOKEN: ${{ secrets.OPENUPM_WEBSITE_CN_ACCESS_TOKEN }}

  deploy-website-cn:
    runs-on: ubuntu-latest
    needs: build-website-cn
    if: github.ref == 'refs/heads/master' && github.repository == 'openupm/openupm'
    steps:
    - name: deploy website
      uses: maddox/actions/ssh@master
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        HOST: ${{ secrets.HOST_CN }}
        USER: ${{ secrets.USER }}
      with:
        args: |
            /home/openupm/openupm-devops/scripts/deploy-website-cn.sh
